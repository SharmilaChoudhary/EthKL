import{a as u}from"./chunk-Y3BATGHX.mjs";import{a as c}from"./chunk-ADE6MVXC.mjs";import{n as l}from"./chunk-G5XLMQ5E.mjs";import{a as d}from"./chunk-KEYAPEAX.mjs";import{jwtDecode as w}from"jwt-decode";var f=class t extends u{constructor(e){super(e)}serialize(e){if(e.serializeStr(this.jwt),e.serializeStr(this.uidKey),e.serializeFixedBytes(this.pepper),this.ephemeralKeyPair.serialize(e),this.proof===void 0)throw new Error("Cannot serialize - proof undefined");this.proof.serialize(e)}static deserialize(e){let i=e.deserializeStr(),s=e.deserializeStr(),o=e.deserializeFixedBytes(31),a=c.deserialize(e),n=l.deserialize(e);return t.create({proof:n,pepper:o,uidKey:s,jwt:i,ephemeralKeyPair:a})}static fromBytes(e){return t.deserialize(new d(e))}static create(e){let{address:i,proof:s,jwt:o,ephemeralKeyPair:a,pepper:n,uidKey:p="sub",proofFetchCallback:y}=e,r=w(o);if(typeof r.iss!="string")throw new Error("iss was not found");if(typeof r.aud!="string")throw new Error("aud was not found or an array of values");let m=r[p];return new t({address:i,proof:s,ephemeralKeyPair:a,iss:r.iss,uidKey:p,uidVal:m,aud:r.aud,pepper:n,jwt:o,proofFetchCallback:y})}};export{f as a};
//# sourceMappingURL=chunk-E4O26ZJB.mjs.map