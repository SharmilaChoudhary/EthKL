import{a as w}from"./chunk-Y3BATGHX.mjs";import{a as f}from"./chunk-ADE6MVXC.mjs";import{a as y}from"./chunk-BA4RBST6.mjs";import{n as u}from"./chunk-G5XLMQ5E.mjs";import{b as c}from"./chunk-OHRL766V.mjs";import{a as l}from"./chunk-KEYAPEAX.mjs";import{jwtDecode as A}from"jwt-decode";var m=class s extends w{constructor(e){super(e),this.publicKey=y.create(e)}serialize(e){if(this.proof===void 0)throw new Error("Cannot serialize - proof undefined");e.serializeStr(this.jwt),e.serializeStr(this.uidKey),e.serializeFixedBytes(this.pepper),this.publicKey.jwkAddress.serialize(e),this.ephemeralKeyPair.serialize(e),this.proof.serialize(e)}static deserialize(e){let o=e.deserializeStr(),i=e.deserializeStr(),t=e.deserializeFixedBytes(31),a=c.deserialize(e),d=f.deserialize(e),n=u.deserialize(e);return s.create({proof:n,pepper:t,jwkAddress:a,uidKey:i,jwt:o,ephemeralKeyPair:d})}static fromBytes(e){return s.deserialize(new l(e))}static create(e){let{address:o,proof:i,jwt:t,ephemeralKeyPair:a,pepper:d,jwkAddress:n,uidKey:p="sub",proofFetchCallback:K}=e,r=A(t);if(typeof r.iss!="string")throw new Error("iss was not found");if(typeof r.aud!="string")throw new Error("aud was not found or an array of values");let h=r[p];return new s({address:o,proof:i,ephemeralKeyPair:a,iss:r.iss,uidKey:p,uidVal:h,aud:r.aud,pepper:d,jwkAddress:c.from(n),jwt:t,proofFetchCallback:K})}};export{m as a};
//# sourceMappingURL=chunk-CB6H4VMZ.mjs.map